<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.hms.www.repository.MemberDAO">

	<insert id="insertUser">
		INSERT INTO member(email, pwd, nick_name)
		VALUES(#{email}, #{pwd}, #{nickName})
	</insert>
	
	<insert id="insertAuth">
		INSERT INTO auth_member
		VALUES(#{email}, 'ROLE_USER')
		<!-- 가입을 하면 기본적으로 ROLE_USER 권한을 부여하도록 설정 완료 -->
		<!-- DB Table 생성시 auth의 default 값을 ROLE_USER로 Setting 해도 됨 -->
		<!-- ADMIN 계정의 권한 부여는 DB SQL 쿼리문을 직접 입력하여 부여하는 것이 효율적임 -->
	</insert>
	
	<select id="selectEmailInt" resultType="int">
		SELECT COUNT(email) FROM member
		WHERE email = #{email}
	</select>
	
	<select id="selectUserName" resultType="com.hms.www.security.MemberVO">
		SELECT * FROM member
		WHERE email = #{username}
	</select>
	
	<select id="selectAuths" resultType="com.hms.www.security.AuthVO">
		SELECT * FROM auth_member
		WHERE email = #{username}
	</select>
	
	<update id="updateLastLogin">
		UPDATE member SET last_login = NOW()
		WHERE email = #{authEmail}
	</update>
	
	<select id="selectMemberList" resultType="com.hms.www.security.MemberVO">
		SELECT * FROM member
	</select>
	
	<update id="updateNopwd">
		UPDATE member SET nick_name = #{nickName}
		WHERE email = #{email}
	</update>
	
	<update id="updatePwd">
		UPDATE member SET nick_name = #{nickName}, pwd = #{pwd}
		WHERE email = #{email}
	</update>
	
	<delete id="deleteAuthMember">
		DELETE FROM auth_member
		WHERE email = #{email}
	</delete>
	
	<delete id="deleteMember">
		DELETE FROM member
		WHERE email = #{email}
	</delete>

</mapper>